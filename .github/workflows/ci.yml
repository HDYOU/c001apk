name: main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v2

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-core-${{ hashFiles('**/build.gradle.kts', '**/build.gradle', '**/libs.versions.toml') }}
          restore-keys: |
            gradle-deps

      - name: Cache Gradle Build
        uses: actions/cache@v3.2.4
        with:
          path: |
            ~/.gradle/caches/build-cache-*
            ~/.gradle/buildOutputCleanup/cache.properties
          key: gradle-builds-core-${{ github.sha }}
          restore-keys: |
            gradle-builds

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew :app:assembleRelease -x lint -x lintVitalRelease \
          -x test -x checkReleaseAarMetadata \
          -x checkKotlinGradlePluginConfigurationErrors \
          -x checkReleaseDuplicateClasses
#        env:
#          KEYSTORE_PATH: "../keystore.jks"
#          KEYSTORE_PASSWORD: 123456
#          KEY_ALIAS: 123456
#          KEY_PASSWORD: 123456

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        # don't upload the artifacts if it's a pull request
#        if: ${{ !github.event.pull_request }}
        with:
          path: './app/build/outputs/**/*.apk'
          name: build_output_${{ github.event.head_commit.id }}.zip

      - name: 获取当前时间
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYY/MM/DD
      - name: 上传
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "build_android_${{steps.current-time.outputs.formattedTime}}"
          prerelease: true
          files: ./app/build/outputs/**/*.apk
