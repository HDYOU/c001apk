name: main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: 'recursive'
          fetch-depth: 1

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@main

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@main

      - name: Set up JDK
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: temurin

      - name: Set Gradle Conf
        run: |
          mkdir -p ~/.gradle/
          echo 'org.gradle.parallel=true' >> ~/.gradle/gradle.properties

          echo 'org.gradle.daemon=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.jvmargs=-XX:+UseParallelGC -Xmx6g -Xms256m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 ' >> ~/.gradle/gradle.properties
          echo 'org.gradle.workers.max=2' >> ~/.gradle/gradle.properties
          echo 'kotlin.incremental=false' >> ~/.gradle/gradle.properties
          echo 'kotlin.compiler.execution.strategy=in-process' >> ~/.gradle/gradle.properties
          echo 'org.gradle.caching=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.configureondemand=true' >> ~/.gradle/gradle.properties

          # 配置缓存
          echo 'org.gradle.unsafe.configuration-cache=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.unsafe.configuration-cache-problems=warn' >> ~/.gradle/gradle.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew :app:assembleRelease -x lint -x lintVitalRelease \
          --build-cache --parallel --no-daemon \
          -x test -x checkReleaseAarMetadata \
          -x checkKotlinGradlePluginConfigurationErrors \
          -x checkReleaseDuplicateClasses
#        env:
#          KEYSTORE_PATH: "../keystore.jks"
#          KEYSTORE_PASSWORD: 123456
#          KEY_ALIAS: 123456
#          KEY_PASSWORD: 123456

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        # don't upload the artifacts if it's a pull request
#        if: ${{ !github.event.pull_request }}
        with:
          path: './app/build/outputs/**/*.apk'
          name: build_output_${{ github.event.head_commit.id }}.zip

      - name: 获取当前时间
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYY/MM/DD
      - name: 上传
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "build_android_${{steps.current-time.outputs.formattedTime}}"
          prerelease: true
          files: ./app/build/outputs/**/*.apk
